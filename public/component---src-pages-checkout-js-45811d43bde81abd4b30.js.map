{"version":3,"sources":["webpack:///./src/pages/checkout.js","webpack:///./src/components/seo.js"],"names":["deliveryOptions","key","text","value","Wrapper","styled","div","_templateObject","Checkout","props","_this","_React$Component","call","this","handleUserInput","e","_this$setState","name","target","setState","validateField","toggleConfirmation","conditions","state","conditionsValid","validateForm","onToken","token","fetch","method","body","JSON","stringify","then","response","json","data","alert","email","charge","cart","valueAll","firstName","lastName","address","phone","delivery","condutions","formErrors","firstNameValid","lastNameValid","addressValid","phoneValid","deliveryValid","formValid","fieldName","fieldValidationErrors","emailValid","match","length","errorClass","error","render","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","style","marginBottom","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","verticalAlign","Item","Content","Header","items","map","item","product","id","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","avatar","src","img","margin","count","Description","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","width","tag","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","Group","widths","Input","type","required","label","placeholder","onChange","Field","control","Select","options","search","TextArea","semantic_ui_react__WEBPACK_IMPORTED_MODULE_15__","checked","react_stripe_checkout__WEBPACK_IMPORTED_MODULE_16___default","onClick","preventDefault","stripeKey","color","React","Component","connect","substract_cart","toggle_drawer","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-checkout-js-45811d43bde81abd4b30.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport { substract_cart, toggle_drawer } from '../state/Actions'\r\nimport {\r\n  List,\r\n  Image,\r\n  Label,\r\n  Form,\r\n  TextArea,\r\n  Select,\r\n  Checkbox,\r\n} from 'semantic-ui-react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport styled from 'styled-components'\r\n// TO_DO  split in seperete files, error message display\r\n\r\nconst deliveryOptions = [\r\n  { key: 'dhl', text: 'DHL', value: 'dhl' },\r\n  { key: 'ups', text: 'UPS', value: 'ups' },\r\n]\r\nconst Wrapper = styled.div`\r\n  @media (min-width: 768px) {\r\n    display:flex & > :nth-child(1) {\r\n      width: 280px;\r\n    }\r\n    & > :nth-child(2) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\nclass Checkout extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      charge: this.props.cart.valueAll,\r\n      email: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      phone: '',\r\n      delivery: '',\r\n      condutions: false,\r\n      formErrors: {\r\n        email: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        phone: '',\r\n        delivery: '',\r\n      },\r\n      firstNameValid: false,\r\n      lastNameValid: false,\r\n      addressValid: false,\r\n      phoneValid: false,\r\n      deliveryValid: false,\r\n      formValid: false,\r\n      conditionsValid: false,\r\n    }\r\n  }\r\n\r\n  handleUserInput = e => {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    this.setState({ [name]: value }, () => {\r\n      this.validateField(name, value)\r\n    })\r\n  }\r\n\r\n  //TO_DO needs change\r\n  toggleConfirmation = () =>\r\n    this.setState(\r\n      {\r\n        conditions: !this.state.conditions,\r\n        conditionsValid: !this.state.conditionsValid,\r\n      },\r\n      this.validateForm\r\n    )\r\n\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors\r\n    let emailValid = this.state.emailValid\r\n    let firstNameValid = this.state.firstNameValid\r\n    let lastNameValid = this.state.lastNameValid\r\n    let addressValid = this.state.addressValid\r\n    let phoneValid = this.state.phoneValid\r\n    let deliveryValid = this.state.deliveryValid\r\n    switch (fieldName) {\r\n      case 'email':\r\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)\r\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid'\r\n        break\r\n      case 'firstName':\r\n        firstNameValid = value.length >= 3\r\n        fieldValidationErrors.firstName = firstNameValid ? '' : ' is too short'\r\n        break\r\n      case 'lastName':\r\n        lastNameValid = value.length >= 3\r\n        fieldValidationErrors.lastName = lastNameValid ? '' : ' is too short'\r\n        break\r\n      case 'address':\r\n        // TO_DO temprorary validation and slit adress in separate fields ;)\r\n        addressValid = value.length > 20\r\n        fieldValidationErrors.address = addressValid ? '' : ' is too short'\r\n        break\r\n      case 'phone':\r\n        phoneValid = value.match(\r\n          /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/\r\n        )\r\n        fieldValidationErrors.phone = phoneValid ? '' : ' is too short'\r\n        break\r\n      case 'delivery':\r\n        // TO_DO temprorary validation ;)\r\n        deliveryValid = value === 'dhl' || 'ups'\r\n        fieldValidationErrors.delivery = deliveryValid\r\n          ? ''\r\n          : 'no valid shipping'\r\n        break\r\n      // case 'conditions':\r\n      // // TO_DO temprorary validation ;)\r\n      // conditionsValid = value;\r\n      // fieldValidationErrors.conditions = conditionsValid ? '': 'no conditions agreement';\r\n      // break;\r\n      default:\r\n        break\r\n    }\r\n    this.setState(\r\n      {\r\n        formErrors: fieldValidationErrors,\r\n        emailValid: emailValid,\r\n        firstNameValid: firstNameValid,\r\n        lastNameValid: lastNameValid,\r\n        addressValid: addressValid,\r\n        phoneValid: phoneValid,\r\n      },\r\n      this.validateForm\r\n    )\r\n  }\r\n\r\n  validateForm() {\r\n    this.setState({\r\n      formValid:\r\n        this.state.emailValid &&\r\n        this.state.firstNameValid &&\r\n        this.state.lastNameValid &&\r\n        this.state.addressValid &&\r\n        this.state.conditionsValid,\r\n    })\r\n  }\r\n\r\n  errorClass(error) {\r\n    return error.length === 0 ? '' : 'has-error'\r\n  }\r\n\r\n  onToken = token => {\r\n    fetch('/save-stripe-token', {\r\n      method: 'POST',\r\n      body: JSON.stringify(token),\r\n    }).then(response => {\r\n      response.json().then(data => {\r\n        alert(`We are in business, ${data.email}`)\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Checkout\" />\r\n        <Wrapper>\r\n          <div style={{ marginBottom: '2rem' }}>\r\n            <List verticalAlign=\"middle\">\r\n              <List.Item>\r\n                <List.Content>\r\n                  <List.Header style={{ marginBottom: '1em' }}>\r\n                    <p>Order Summary </p>\r\n                    <p>Price: {this.props.cart.valueAll} $</p>\r\n                    <p>Shipping: {this.props.cart.valueAll} $</p>\r\n                  </List.Header>\r\n                </List.Content>\r\n              </List.Item>\r\n              {this.props.cart.items.map(item => {\r\n                const product = item.product\r\n                return (\r\n                  <List.Item key={`card-item-${product.id}`}>\r\n                    <List.Content>\r\n                      <List.Header>\r\n                        <Image\r\n                          avatar\r\n                          src={product.img[0]}\r\n                          style={{ margin: 0 }}\r\n                        />\r\n                        <span>\r\n                          {' '}\r\n                          {item.count} X {product.name}{' '}\r\n                        </span>\r\n                      </List.Header>\r\n                      <List.Description>\r\n                        <Label style={{ width: '100px' }} tag>\r\n                          Price: {item.value} $\r\n                        </Label>\r\n                      </List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                )\r\n              })}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Form>\r\n              <Form.Group widths={3}>\r\n                <Form.Input\r\n                  error={this.errorClass(this.state.formErrors.email)}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  required\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n                <Form.Input\r\n                  error={this.errorClass(this.state.formErrors.firstName)}\r\n                  name=\"firstName\"\r\n                  required\r\n                  label=\"First Name\"\r\n                  placeholder=\"First Name\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n                <Form.Input\r\n                  error={this.errorClass(this.state.formErrors.lastName)}\r\n                  name=\"lastName\"\r\n                  required\r\n                  label=\"Last Name\"\r\n                  placeholder=\"Last Name\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group widths={2}>\r\n                <Form.Input\r\n                  error={this.errorClass(this.state.formErrors.address)}\r\n                  name=\"address\"\r\n                  required\r\n                  label=\"Address\"\r\n                  placeholder=\"Address\"\r\n                  value={this.state.address}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n                <Form.Input\r\n                  error={this.errorClass(this.state.formErrors.phone)}\r\n                  name=\"phone\"\r\n                  label=\"Phone\"\r\n                  placeholder=\"Phone\"\r\n                  value={this.state.phone}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n              </Form.Group>\r\n              <Form.Field\r\n                required\r\n                control={Select}\r\n                options={deliveryOptions}\r\n                error={this.errorClass(this.state.formErrors.delivery)}\r\n                label=\"Delivery\"\r\n                name=\"delivery\"\r\n                placeholder=\"Delivery\"\r\n                search\r\n                // value={this.state.delivery}\r\n                onChange={this.handleUserInput}\r\n              />\r\n              <Form.Field\r\n                control={TextArea}\r\n                label=\"Coments\"\r\n                placeholder=\"...\"\r\n              />\r\n              <Form.Field>\r\n                <Checkbox\r\n                  name=\"conditions\"\r\n                  checked={this.state.conditions}\r\n                  onChange={this.toggleConfirmation}\r\n                  required\r\n                  label=\"I agree to the Terms and Conditions\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n            {!this.state.formValid ? (\r\n              <Label color=\"red\">Fill form</Label>\r\n            ) : (\r\n              <StripeCheckout\r\n                onClick={e => e.preventDefault()}\r\n                token={this.onToken}\r\n                label={`Pay ${this.state.charge}$ with card`}\r\n                stripeKey=\"my_PUBLISHABLE_stripekey\"\r\n              />\r\n            )}\r\n          </div>\r\n        </Wrapper>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart,\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { substract_cart, toggle_drawer }\r\n)(Checkout)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}